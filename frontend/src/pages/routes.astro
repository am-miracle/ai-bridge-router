---
import MainLayout from "../layouts/main.astro";
import { HeroSection } from "@/components/HeroSection";
import { RouteQuoteFormWrapper } from "@/components/RouteQuoteFormWrapper";
import { ResultsSection } from "@/components/ResultsSection";
import { EmptyState } from "@/components/EmptyState";
import { URLUpdater } from "@/components/URLUpdater";
import { actions, isInputError } from "astro:actions";
import { supportedChains, commonTokens } from "@/config/chains";

const content = {
  title: "Find Bridge Routes - Bridge Router",
};

// Get action result from form submission
const result = Astro.getActionResult(actions.getRouteQuote);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
const actionError = result?.error && !isInputError(result.error) ? result.error : undefined;

// Get URL parameters for pre-populating form or from result data
// Priority: result data (from action) > URL params
const urlParams = Astro.url.searchParams;
const formDataFromUrl = {
  sourceChain: result?.data?.sourceChain || urlParams.get("sourceChain") || "",
  destinationChain: result?.data?.destinationChain || urlParams.get("destinationChain") || "",
  tokenAddress: result?.data?.tokenAddress || urlParams.get("tokenAddress") || "",
  amount: result?.data?.amount || urlParams.get("amount") || "",
  slippage: result?.data?.slippage || urlParams.get("slippage") || "0.5",
};

// Build URL with query parameters if we have result data
let urlWithParams = "";
if (result?.data) {
  const params = new URLSearchParams({
    sourceChain: result.data.sourceChain,
    destinationChain: result.data.destinationChain,
    tokenAddress: result.data.tokenAddress,
    amount: result.data.amount,
    slippage: result.data.slippage || "0.5",
  });
  urlWithParams = `?${params.toString()}`;
}
---

<MainLayout content={content}>
  {urlWithParams && <URLUpdater queryParams={urlWithParams} client:idle />}
  <div class="max-w-6xl mx-auto space-y-8">
    <HeroSection
      title="Find the Best Bridge Route"
      description="Compare routes across multiple bridges to get the best rates, fastest times, and highest security."
      client:visible
    />

    {/* Quote Form */}
    <RouteQuoteFormWrapper
      supportedChains={supportedChains}
      commonTokens={commonTokens}
      initialErrors={inputErrors}
      actionError={actionError}
      actionUrl={actions.getRouteQuote.toString()}
      formData={formDataFromUrl}
      hasResults={!!result?.data?.routes}
      client:idle
    />

    {/* Results Section */}
    {
      result && !result.error && result.data && (
        <ResultsSection
          routes={result.data.routes}
          amount={result.data.amount}
          sourceChain={result.data.sourceChain}
          destinationChain={result.data.destinationChain}
          client:visible
        />
      )
    }

    {!result && <EmptyState client:visible />}
  </div>
</MainLayout>
